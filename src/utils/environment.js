// ÌôòÍ≤Ω Ïú†Ìã∏Î¶¨Ìã∞ Ìï®ÏàòÎì§

export const isDevelopment = () => {
  return import.meta.env.VITE_APP_ENV === 'development' || import.meta.env.DEV
}

export const isProduction = () => {
  return import.meta.env.VITE_APP_ENV === 'production' || import.meta.env.PROD
}

export const isLocal = () => {
  return import.meta.env.VITE_APP_ENV === 'local'
}

export const getEnvironment = () => {
  return import.meta.env.VITE_APP_ENV || (import.meta.env.DEV ? 'development' : 'production')
}

export const getApiBaseUrl = () => {
  return import.meta.env.VITE_API_BASE_URL
}

export const getAppName = () => {
  return import.meta.env.VITE_APP_NAME || 'O-Ship Seller'
}

export const isDebugMode = () => {
  return import.meta.env.VITE_DEBUG_MODE === 'true' || isDevelopment() || isLocal()
}

// ÌôòÍ≤Ω Ï†ïÎ≥¥ Î°úÍπÖ (Í∞úÎ∞ú ÌôòÍ≤ΩÏóêÏÑúÎßå)
export const logEnvironmentInfo = () => {
  if (isDebugMode()) {
    console.group('üåç Environment Info')
    console.log('Environment:', getEnvironment())
    console.log('Mode:', import.meta.env.MODE)
    console.log('API Base URL:', getApiBaseUrl())
    console.log('App Name:', getAppName())
    console.log('Debug Mode:', isDebugMode())
    console.log('Is Development:', isDevelopment())
    console.log('Is Production:', isProduction())
    console.log('Is Local:', isLocal())
    console.groupEnd()
  }
}